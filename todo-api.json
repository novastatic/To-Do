{
  "swagger": "2.0",
  "info": {
    "description": "This is part of a school project to implement simple To-Do list and corresponding API.",
    "version": "1.0.",
    "title": "To-Do List",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "alenz@sievers-group.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "127.0.0.1:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "todo-list",
      "description": "To-Do Liste"
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/todo-list/{list_id}": {
      "get": {
        "tags": ["todo-list"],
        "summary": "Get list by list_id",
        "description": "",
        "operationId": "getListItems",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "Gets all entries from specified to-do list ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The list item was succesfully returned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TodoEntry"
              }
            }
          },
          "404": {
            "description": "List not found"
          }
        }
      },
      "delete": {
        "tags": ["todo-list"],
        "summary": "Delete a complete list with all entries",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteList",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The list that needs to be deleted.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The list was deleted."
          },
          "404": {
            "description": "List not found."
          }
        }
      }
    },
    "/todo-list": {
      "post": {
        "tags": ["todo-list"],
        "summary": "Add a new todo list",
        "description": "",
        "operationId": "addList",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List object that needs to be added.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TodoList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List added",
            "schema": {
              "$ref": "#/definitions/TodoList"
            }
          },
          "500": {
            "description": "List could not be added"
          }
        }
      }
    },
    "/todo-list/{list_id}/entry/": {
      "post": {
        "tags": ["todo-list"],
        "summary": "Add a new entry to existing todo list.",
        "description": "",
        "operationId": "addEntry",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "list_id",
            "description": "List object that needs to be added.",
            "required": true,
            "type":"string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TodoList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entry added.",
            "schema": {
              "$ref": "#/definitions/TodoList"
            }
          }
        }
      }
    },
    "/todo-list/{list_id}/entry/{entry_id}": {
      "put": {
        "tags": ["todo-list"],
        "summary": "Updated existing entry.",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateEntry",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "list that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "entry_id",
            "in": "path",
            "description": "list that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TodoList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entry was updated.",
            "schema": {
              "$ref": "#/definitions/TodoList"
            }
          }
        }
      },
      "delete": {
        "tags": ["todo-list"],
        "summary": "Delete entry from existing Todo-List.",
        "description": "",
        "operationId": "deleteEntry",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The list from which the entry needs to be deleted",
            "required": true,
            "type": "string"
          },
          {
            "name": "entry_id",
            "in": "path",
            "description": "The entry that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The entry was deleted."
          },
          "404": {
            "description": "List or entry not found."
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get a list of all users.",
        "description": "",
        "tags": ["todo-list"],
        "operationId": "getUsers",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Showing all users.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Users"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "description": "",
        "operationId": "createUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user was created."
          }
        }
      }
    },
    "/user/{user_id}": {
      "delete": {
        "tags": ["user"],
        "summary": "Deletes a user.",
        "description": "",
        "operationId": "deleteUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The id of the user that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The user was deleted."
          },
          "404": {
            "description": "The user was not found."
          }
        }
      }
    }
  },
  "definitions": {
    "TodoList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TodoEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "user_id": {
          "type": "string",
          "format": "uuid"
        },
        "list_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}

